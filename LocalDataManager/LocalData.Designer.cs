//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Data.EntityClient;
using System.ComponentModel;
using System.Xml.Serialization;
using System.Runtime.Serialization;

[assembly: EdmSchemaAttribute()]
#region EDM Relationship Metadata

[assembly: EdmRelationshipAttribute("LocalDataModel", "Applications_UserMenuOptions", "Applications", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Disney.iDash.LocalDataManager.EDMApplication), "UserMenuOptions", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Disney.iDash.LocalDataManager.EDMUserMenuOption), true)]
[assembly: EdmRelationshipAttribute("LocalDataModel", "Users_UserMenuOptions", "Users", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Disney.iDash.LocalDataManager.EDMUser), "UserMenuOptions", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Disney.iDash.LocalDataManager.EDMUserMenuOption), true)]
[assembly: EdmRelationshipAttribute("LocalDataModel", "UserApplications", "Applications", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Disney.iDash.LocalDataManager.EDMApplication), "Users", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Disney.iDash.LocalDataManager.EDMUser))]
[assembly: EdmRelationshipAttribute("LocalDataModel", "UserEnvironments", "Environments", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Disney.iDash.LocalDataManager.EDMEnvironment), "Users", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Disney.iDash.LocalDataManager.EDMUser))]

#endregion

namespace Disney.iDash.LocalDataManager
{
    #region Contexts
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    public partial class LocalDataEntities : ObjectContext
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new LocalDataEntities object using the connection string found in the 'LocalDataEntities' section of the application configuration file.
        /// </summary>
        public LocalDataEntities() : base("name=LocalDataEntities", "LocalDataEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new LocalDataEntities object.
        /// </summary>
        public LocalDataEntities(string connectionString) : base(connectionString, "LocalDataEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new LocalDataEntities object.
        /// </summary>
        public LocalDataEntities(EntityConnection connection) : base(connection, "LocalDataEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        #endregion
    
        #region Partial Methods
    
        partial void OnContextCreated();
    
        #endregion
    
        #region ObjectSet Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<EDMApplication> EDMApplications
        {
            get
            {
                if ((_EDMApplications == null))
                {
                    _EDMApplications = base.CreateObjectSet<EDMApplication>("EDMApplications");
                }
                return _EDMApplications;
            }
        }
        private ObjectSet<EDMApplication> _EDMApplications;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<EDMEnvironment> EDMEnvironments
        {
            get
            {
                if ((_EDMEnvironments == null))
                {
                    _EDMEnvironments = base.CreateObjectSet<EDMEnvironment>("EDMEnvironments");
                }
                return _EDMEnvironments;
            }
        }
        private ObjectSet<EDMEnvironment> _EDMEnvironments;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<EDMUserMenuOption> EDMUserMenuOptions
        {
            get
            {
                if ((_EDMUserMenuOptions == null))
                {
                    _EDMUserMenuOptions = base.CreateObjectSet<EDMUserMenuOption>("EDMUserMenuOptions");
                }
                return _EDMUserMenuOptions;
            }
        }
        private ObjectSet<EDMUserMenuOption> _EDMUserMenuOptions;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<EDMUser> EDMUsers
        {
            get
            {
                if ((_EDMUsers == null))
                {
                    _EDMUsers = base.CreateObjectSet<EDMUser>("EDMUsers");
                }
                return _EDMUsers;
            }
        }
        private ObjectSet<EDMUser> _EDMUsers;

        #endregion
        #region AddTo Methods
    
        /// <summary>
        /// Deprecated Method for adding a new object to the EDMApplications EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToEDMApplications(EDMApplication eDMApplication)
        {
            base.AddObject("EDMApplications", eDMApplication);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the EDMEnvironments EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToEDMEnvironments(EDMEnvironment eDMEnvironment)
        {
            base.AddObject("EDMEnvironments", eDMEnvironment);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the EDMUserMenuOptions EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToEDMUserMenuOptions(EDMUserMenuOption eDMUserMenuOption)
        {
            base.AddObject("EDMUserMenuOptions", eDMUserMenuOption);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the EDMUsers EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToEDMUsers(EDMUser eDMUser)
        {
            base.AddObject("EDMUsers", eDMUser);
        }

        #endregion
    }
    

    #endregion
    
    #region Entities
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="LocalDataModel", Name="EDMApplication")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class EDMApplication : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new EDMApplication object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="applicationName">Initial value of the ApplicationName property.</param>
        /// <param name="tab">Initial value of the Tab property.</param>
        public static EDMApplication CreateEDMApplication(global::System.Int32 id, global::System.String applicationName, global::System.String tab)
        {
            EDMApplication eDMApplication = new EDMApplication();
            eDMApplication.Id = id;
            eDMApplication.ApplicationName = applicationName;
            eDMApplication.Tab = tab;
            return eDMApplication;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ApplicationName
        {
            get
            {
                return _ApplicationName;
            }
            set
            {
                OnApplicationNameChanging(value);
                ReportPropertyChanging("ApplicationName");
                _ApplicationName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("ApplicationName");
                OnApplicationNameChanged();
            }
        }
        private global::System.String _ApplicationName;
        partial void OnApplicationNameChanging(global::System.String value);
        partial void OnApplicationNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Tab
        {
            get
            {
                return _Tab;
            }
            set
            {
                OnTabChanging(value);
                ReportPropertyChanging("Tab");
                _Tab = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Tab");
                OnTabChanged();
            }
        }
        private global::System.String _Tab;
        partial void OnTabChanging(global::System.String value);
        partial void OnTabChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> Active
        {
            get
            {
                return _Active;
            }
            set
            {
                OnActiveChanging(value);
                ReportPropertyChanging("Active");
                _Active = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Active");
                OnActiveChanged();
            }
        }
        private Nullable<global::System.Boolean> _Active;
        partial void OnActiveChanging(Nullable<global::System.Boolean> value);
        partial void OnActiveChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LocalDataModel", "Applications_UserMenuOptions", "UserMenuOptions")]
        public EntityCollection<EDMUserMenuOption> UserMenuOptions
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<EDMUserMenuOption>("LocalDataModel.Applications_UserMenuOptions", "UserMenuOptions");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<EDMUserMenuOption>("LocalDataModel.Applications_UserMenuOptions", "UserMenuOptions", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LocalDataModel", "UserApplications", "Users")]
        public EntityCollection<EDMUser> Users
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<EDMUser>("LocalDataModel.UserApplications", "Users");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<EDMUser>("LocalDataModel.UserApplications", "Users", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="LocalDataModel", Name="EDMEnvironment")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class EDMEnvironment : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new EDMEnvironment object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="database">Initial value of the Database property.</param>
        public static EDMEnvironment CreateEDMEnvironment(global::System.Int32 id, global::System.String database)
        {
            EDMEnvironment eDMEnvironment = new EDMEnvironment();
            eDMEnvironment.Id = id;
            eDMEnvironment.Database = database;
            return eDMEnvironment;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String EnvironmentName
        {
            get
            {
                return _EnvironmentName;
            }
            set
            {
                OnEnvironmentNameChanging(value);
                ReportPropertyChanging("EnvironmentName");
                _EnvironmentName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("EnvironmentName");
                OnEnvironmentNameChanged();
            }
        }
        private global::System.String _EnvironmentName;
        partial void OnEnvironmentNameChanging(global::System.String value);
        partial void OnEnvironmentNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Hostname
        {
            get
            {
                return _Hostname;
            }
            set
            {
                OnHostnameChanging(value);
                ReportPropertyChanging("Hostname");
                _Hostname = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Hostname");
                OnHostnameChanged();
            }
        }
        private global::System.String _Hostname;
        partial void OnHostnameChanging(global::System.String value);
        partial void OnHostnameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Domain
        {
            get
            {
                return _Domain;
            }
            set
            {
                OnDomainChanging(value);
                ReportPropertyChanging("Domain");
                _Domain = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Domain");
                OnDomainChanged();
            }
        }
        private global::System.String _Domain;
        partial void OnDomainChanging(global::System.String value);
        partial void OnDomainChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Database
        {
            get
            {
                return _Database;
            }
            set
            {
                OnDatabaseChanging(value);
                ReportPropertyChanging("Database");
                _Database = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Database");
                OnDatabaseChanged();
            }
        }
        private global::System.String _Database;
        partial void OnDatabaseChanging(global::System.String value);
        partial void OnDatabaseChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Type
        {
            get
            {
                return _Type;
            }
            set
            {
                OnTypeChanging(value);
                ReportPropertyChanging("Type");
                _Type = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Type");
                OnTypeChanged();
            }
        }
        private global::System.String _Type;
        partial void OnTypeChanging(global::System.String value);
        partial void OnTypeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> Active
        {
            get
            {
                return _Active;
            }
            set
            {
                OnActiveChanging(value);
                ReportPropertyChanging("Active");
                _Active = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Active");
                OnActiveChanged();
            }
        }
        private Nullable<global::System.Boolean> _Active;
        partial void OnActiveChanging(Nullable<global::System.Boolean> value);
        partial void OnActiveChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String LibraryList
        {
            get
            {
                return _LibraryList;
            }
            set
            {
                OnLibraryListChanging(value);
                ReportPropertyChanging("LibraryList");
                _LibraryList = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("LibraryList");
                OnLibraryListChanged();
            }
        }
        private global::System.String _LibraryList;
        partial void OnLibraryListChanging(global::System.String value);
        partial void OnLibraryListChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LocalDataModel", "UserEnvironments", "Users")]
        public EntityCollection<EDMUser> Users
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<EDMUser>("LocalDataModel.UserEnvironments", "Users");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<EDMUser>("LocalDataModel.UserEnvironments", "Users", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="LocalDataModel", Name="EDMUser")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class EDMUser : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new EDMUser object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        public static EDMUser CreateEDMUser(global::System.Int32 id)
        {
            EDMUser eDMUser = new EDMUser();
            eDMUser.Id = id;
            return eDMUser;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String NetworkId
        {
            get
            {
                return _NetworkId;
            }
            set
            {
                OnNetworkIdChanging(value);
                ReportPropertyChanging("NetworkId");
                _NetworkId = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("NetworkId");
                OnNetworkIdChanged();
            }
        }
        private global::System.String _NetworkId = "";
        partial void OnNetworkIdChanging(global::System.String value);
        partial void OnNetworkIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Firstname
        {
            get
            {
                return _Firstname;
            }
            set
            {
                OnFirstnameChanging(value);
                ReportPropertyChanging("Firstname");
                _Firstname = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Firstname");
                OnFirstnameChanged();
            }
        }
        private global::System.String _Firstname = "";
        partial void OnFirstnameChanging(global::System.String value);
        partial void OnFirstnameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Lastname
        {
            get
            {
                return _Lastname;
            }
            set
            {
                OnLastnameChanging(value);
                ReportPropertyChanging("Lastname");
                _Lastname = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Lastname");
                OnLastnameChanged();
            }
        }
        private global::System.String _Lastname = "";
        partial void OnLastnameChanging(global::System.String value);
        partial void OnLastnameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String eMail
        {
            get
            {
                return _eMail;
            }
            set
            {
                OneMailChanging(value);
                ReportPropertyChanging("eMail");
                _eMail = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("eMail");
                OneMailChanged();
            }
        }
        private global::System.String _eMail;
        partial void OneMailChanging(global::System.String value);
        partial void OneMailChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean Active
        {
            get
            {
                return _Active;
            }
            set
            {
                OnActiveChanging(value);
                ReportPropertyChanging("Active");
                _Active = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Active");
                OnActiveChanged();
            }
        }
        private global::System.Boolean _Active = true;
        partial void OnActiveChanging(global::System.Boolean value);
        partial void OnActiveChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LocalDataModel", "Users_UserMenuOptions", "UserMenuOptions")]
        public EntityCollection<EDMUserMenuOption> UserMenuOptions
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<EDMUserMenuOption>("LocalDataModel.Users_UserMenuOptions", "UserMenuOptions");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<EDMUserMenuOption>("LocalDataModel.Users_UserMenuOptions", "UserMenuOptions", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LocalDataModel", "UserApplications", "Applications")]
        public EntityCollection<EDMApplication> Applications
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<EDMApplication>("LocalDataModel.UserApplications", "Applications");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<EDMApplication>("LocalDataModel.UserApplications", "Applications", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LocalDataModel", "UserEnvironments", "Environments")]
        public EntityCollection<EDMEnvironment> Environments
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<EDMEnvironment>("LocalDataModel.UserEnvironments", "Environments");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<EDMEnvironment>("LocalDataModel.UserEnvironments", "Environments", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="LocalDataModel", Name="EDMUserMenuOption")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class EDMUserMenuOption : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new EDMUserMenuOption object.
        /// </summary>
        /// <param name="applicationId">Initial value of the ApplicationId property.</param>
        /// <param name="userId">Initial value of the UserId property.</param>
        /// <param name="disabledMenuOption">Initial value of the DisabledMenuOption property.</param>
        public static EDMUserMenuOption CreateEDMUserMenuOption(global::System.Int32 applicationId, global::System.Int32 userId, global::System.String disabledMenuOption)
        {
            EDMUserMenuOption eDMUserMenuOption = new EDMUserMenuOption();
            eDMUserMenuOption.ApplicationId = applicationId;
            eDMUserMenuOption.UserId = userId;
            eDMUserMenuOption.DisabledMenuOption = disabledMenuOption;
            return eDMUserMenuOption;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ApplicationId
        {
            get
            {
                return _ApplicationId;
            }
            set
            {
                if (_ApplicationId != value)
                {
                    OnApplicationIdChanging(value);
                    ReportPropertyChanging("ApplicationId");
                    _ApplicationId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ApplicationId");
                    OnApplicationIdChanged();
                }
            }
        }
        private global::System.Int32 _ApplicationId;
        partial void OnApplicationIdChanging(global::System.Int32 value);
        partial void OnApplicationIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 UserId
        {
            get
            {
                return _UserId;
            }
            set
            {
                if (_UserId != value)
                {
                    OnUserIdChanging(value);
                    ReportPropertyChanging("UserId");
                    _UserId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("UserId");
                    OnUserIdChanged();
                }
            }
        }
        private global::System.Int32 _UserId;
        partial void OnUserIdChanging(global::System.Int32 value);
        partial void OnUserIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String DisabledMenuOption
        {
            get
            {
                return _DisabledMenuOption;
            }
            set
            {
                if (_DisabledMenuOption != value)
                {
                    OnDisabledMenuOptionChanging(value);
                    ReportPropertyChanging("DisabledMenuOption");
                    _DisabledMenuOption = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("DisabledMenuOption");
                    OnDisabledMenuOptionChanged();
                }
            }
        }
        private global::System.String _DisabledMenuOption;
        partial void OnDisabledMenuOptionChanging(global::System.String value);
        partial void OnDisabledMenuOptionChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LocalDataModel", "Applications_UserMenuOptions", "Applications")]
        public EDMApplication Application
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<EDMApplication>("LocalDataModel.Applications_UserMenuOptions", "Applications").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<EDMApplication>("LocalDataModel.Applications_UserMenuOptions", "Applications").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<EDMApplication> ApplicationReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<EDMApplication>("LocalDataModel.Applications_UserMenuOptions", "Applications");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<EDMApplication>("LocalDataModel.Applications_UserMenuOptions", "Applications", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LocalDataModel", "Users_UserMenuOptions", "Users")]
        public EDMUser User
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<EDMUser>("LocalDataModel.Users_UserMenuOptions", "Users").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<EDMUser>("LocalDataModel.Users_UserMenuOptions", "Users").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<EDMUser> UserReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<EDMUser>("LocalDataModel.Users_UserMenuOptions", "Users");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<EDMUser>("LocalDataModel.Users_UserMenuOptions", "Users", value);
                }
            }
        }

        #endregion
    }

    #endregion
    
}
